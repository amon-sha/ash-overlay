diff --git a/vmnet-only/userif.c b/vmnet-only/userif.c
index 7699d1b..564efb6 100644
--- a/vmnet-only/userif.c
+++ b/vmnet-only/userif.c
@@ -81,7 +81,7 @@ static int  VNetUserIfSetupNotify(VNetUserIF *userIf, VNet_Notify *vn);
 static int  VNetUserIfSetUplinkState(VNetPort *port, uint8 linkUp);
 extern unsigned int  vnet_max_qlen;
 
-#if COMPAT_LINUX_VERSION_CHECK_LT(3, 2, 0)
+#if COMPAT_LINUX_VERSION_CHECK_LT(3, 2, 0) || LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
 #   define compat_kmap(page) kmap(page)
 #   define compat_kunmap(page) kunmap(page)
 #else
@@ -598,20 +598,35 @@ VNetCsumCopyDatagram(const struct sk_buff *skb,	// IN: skb to copy
    for (frag = skb_shinfo(skb)->frags;
 	frag != skb_shinfo(skb)->frags + skb_shinfo(skb)->nr_frags;
 	frag++) {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
+      if (frag->bv_len > 0) {
+#else
       if (frag->size > 0) {
+#endif
 	 unsigned int tmpCsum;
 	 const void *vaddr;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
+	 vaddr = compat_kmap(frag->bv_page);
+	 tmpCsum = csum_and_copy_to_user(vaddr + frag->bv_offset,
+					 curr, frag->bv_len, 0, &err);
+	 compat_kunmap(frag->bv_page);
+#else
 	 vaddr = compat_kmap(frag->page);
 	 tmpCsum = csum_and_copy_to_user(vaddr + frag->page_offset,
 					 curr, frag->size, 0, &err);
 	 compat_kunmap(frag->page);
+#endif
 
 	 if (err) {
 	    return err;
 	 }
 	 csum = csum_block_add(csum, tmpCsum, curr - buf);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
+	 curr += frag->bv_len;
+#else
 	 curr += frag->size;
+#endif
       }
    }
 
