diff --git a/vmci-only/linux/driver.c b/vmci-only/linux/driver.c
index ab7516c..891d8fa 100644
--- a/vmci-only/linux/driver.c
+++ b/vmci-only/linux/driver.c
@@ -1442,7 +1442,11 @@ static INLINE Bool
 VMCIUserVAInvalidPointer(VA uva,      // IN:
                          size_t size) // IN:
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 0, 0)
    return !access_ok(VERIFY_WRITE, (void *)uva, size);
+#else
+   return !access_ok((void *)uva, size);
+#endif
 }
 
 
diff --git a/vmmon-only/linux/hostif.c b/vmmon-only/linux/hostif.c
index 24bd794..ada7940 100644
--- a/vmmon-only/linux/hostif.c
+++ b/vmmon-only/linux/hostif.c
@@ -3660,7 +3660,11 @@ HostIF_MapUserMem(VA addr,                  // IN: User memory virtual address
 
    ASSERT(handle);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 0, 0)
    if (!access_ok(VERIFY_WRITE, p, size)) {
+#else
+   if (!access_ok(p, size)) {
+#endif
       printk(KERN_ERR "%s: Couldn't verify write to uva 0x%p with size %"
              FMTSZ"u\n", __func__, p, size);
 
diff --git a/vmnet-only/userif.c b/vmnet-only/userif.c
index 9b87285..7699d1b 100644
--- a/vmnet-only/userif.c
+++ b/vmnet-only/userif.c
@@ -157,7 +157,11 @@ VNetUserIfMapPtr(VA uAddr,        // IN: pointer to user memory
                  struct page **p, // OUT: locked page
                  void **ptr)      // OUT: kernel mapped pointer
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 0, 0)
    if (!access_ok(VERIFY_WRITE, (void *)uAddr, size) ||
+#else
+   if (!access_ok((void *)uAddr, size) ||
+#endif
        (((uAddr + size - 1) & ~(PAGE_SIZE - 1)) !=
         (uAddr & ~(PAGE_SIZE - 1)))) {
       return -EINVAL;
